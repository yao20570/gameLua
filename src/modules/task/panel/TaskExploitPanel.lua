--战功任务标签页
TaskExploitPanel = class("TaskExploitPanel", BasicPanel)
TaskExploitPanel.NAME = "TaskExploitPanel"

function TaskExploitPanel:ctor(view, panelName)
    TaskExploitPanel.super.ctor(self, view, panelName)
    self._taskProxy = self:getProxy(GameProxys.Task)
    require("modules.task.panel.TaskShowInfoPanel")
    require("modules.task.panel.TaskShowGoodsPanel")
        
    self:setUseNewPanelBg(true)
end

function TaskExploitPanel:finalize()

    --//进度条特效释放
    if self._effectTask ~= nil then
        self._effectTask:finalize()
        self._effectTask = nil 
    end
    TaskExploitPanel.super.finalize(self)
end

function TaskExploitPanel:initPanel()
	TaskExploitPanel.super.initPanel(self)
    local listview = self:getChildByName("listView")
    listview:setVisible(false)
    
    
    self._svReward = self:getChildByName("topPanel/svReward")
end

function TaskExploitPanel:doLayout()
    local listview = self:getChildByName("listView")
    local topPanel = self:getChildByName("topPanel")
    local tabsPanel = self:getTabsPanel()
    NodeUtils:adaptiveTopPanelAndListView(topPanel, listview,GlobalConfig.downHeight,tabsPanel,6)

    self:createScrollViewItemUIForDoLayout(self._svReward)
end

function TaskExploitPanel:onTabChangeEvent(tabControl)
    self:refreshPanel()
    local panel = self:getPanel(TaskPanel.NAME)
    panel:onUpdateCount()
    local redPointProxy = self:getProxy(GameProxys.RedPoint)
    redPointProxy:setTaskInit(true) 
    self._taskProxy:updateRedPoint() 
end


function TaskExploitPanel:refreshPanel()
    self.haveRewardIndex = nil

    local tempData = self._taskProxy:getConfigByPlayerLevel()

    --local listviewTop = self:getChildByName("topPanel/listview")
    local listview = self:getChildByName("listView")
    local resetDate = self:getChildByName("topPanel/reSetDate")
    resetDate:setString(self:getTextWord(50063))
    
    --活跃度
    local currentValue = self._taskProxy:getExploitValue()
    local activeNum = self:getChildByName("topPanel/activeBg/labActiveNum")
    activeNum:setString(currentValue)


    --//null刷新新的战功宝箱 
    for k,v in pairs(tempData) do
        --logger:info("k ----------------- "..k )
        local itemPanel = self:getChildByName("topPanel/itemPanel"..k)
        self:renderItemBox(itemPanel,v,k)
    end

    --活跃度进度条
    local count = 10 * tempData[1].activeneed
    local per = currentValue/count*100

    logger:info(" 当前的百分比 "..per.."  "..count.."  "..currentValue)
    local progressBar = self:getChildByName("topPanel/ProgressBar_Di/ProgressBar_Exp")

    if per >= 100 then
    per = 100
    end
    progressBar:setPercent(per)

    local width = progressBar:getContentSize().width * per/100
    logger:info("当前总宽度 "..width)

    if self._effectTask == nil then
    self._effectTask = self:createUICCBLayer("rgb-jdt-huang"--[["rgb-zjm-tubiao"]], progressBar )
    self._effectTask:setPosition(width,progressBar:getContentSize().height /2)
    self._effectTask:setLocalZOrder(3)
    self:setVisible(true)
    else
    self._effectTask:setPositionX(width)
    end

    table.insert(tempData,{last = true})
    self.topItmesInit = true

    self:renderScrollView(self._svReward, "topItemPanl", tempData, self, self.renderTopItem, self.haveRewardIndex)

    data = self._taskProxy:getItemsData()
    if not data then
        -- local configData = ConfigDataManager:getConfigData(ConfigData.ActiveMissionConfig)
        self._taskProxy:data2ItemData()
        data = self._taskProxy:getItemsData()
    end

    ----------------------------------------------------------------------------------------
    local buf = {}
    for k, v in pairs(data) do
        for i = 1, 3 do
            table.insert(buf, v[i])
        end
    end
    data = buf
    ----------------------------------------------------------------------------------------

    local function delay()
        --print("更新界面++++++++++")
        listview:setVisible(true)
        self:renderListView(listview, data, self, self.renderItems)
--        local items = #listviewTop:getItems()
--        local offset = {}
--        offset[4] =0.5
--        offset[5] = 1
--        offset[6] = 2.5
--        offset[7] = 3.5
--        offset[8] = 5
--        offset[9] = 5

--        if self.haveRewardIndex ~= nil and self.haveRewardIndex > 2 then
--            local percent = (self.haveRewardIndex + (offset[self.haveRewardIndex] or 0))/items*100
--            percent = percent > 100 and 100 or percent
--            listviewTop:jumpToPercentHorizontal(percent)
--        end

    end
    delay()

end


function TaskExploitPanel:showTaskInfo(info,finishTimes,iconInfo)
    local roleProxy = self:getProxy(GameProxys.Role)
    local playerLevel = roleProxy:getRoleAttrValue(PlayerPowerDefine.POWER_level)
    if info.opencond >playerLevel then
        self:showSysMessage("主公"..info.opencond.."级开启！")
    else
        local panel = self:getPanel(TaskShowInfoPanel.NAME)
        panel:show()
        panel:updateInfos(info,finishTimes,iconInfo)
    end
end


function TaskExploitPanel:showTaskGoods(info)
    logger:info("点击一个战功宝箱")
    if not self.TaskShowGoodsPanel then
        local parent = self:getParent()
        self.TaskShowGoodsPanel = TaskShowGoodsPanel.new(parent, self)
    end
    local function callback()
        self:refreshPanel()   
    end
    local playerProxy = self:getProxy(GameProxys.Role)
    local lv = playerProxy:getRoleAttrValue(PlayerPowerDefine.POWER_level)
    info.lv = lv
    self.TaskShowGoodsPanel:updateInfos(info,self._taskProxy,callback)
end

function TaskExploitPanel:onBoxBtnTouch(sender)
    self:showTaskGoods(sender.info)
end

function TaskExploitPanel:refreshRenderTopItems(listviewTop, infos)
    --self._itemInfos = infos -- 数据表
    for i=1,#infos do
        local itemPanel = listviewTop:getItem(i-1)
        self:renderTopItem(itemPanel,infos[i],i-1)
    end
end

function TaskExploitPanel:renderTopItem(itemPanel, info, index)
    if itemPanel == nil or info == nil then
        return
    end

    local boxBtn = itemPanel:getChildByName("boxBtn")
    if info.last then -- 如果true ，itemPanel:(false)
        itemPanel:setVisible(info.last ~= true)
        return 
    end
    
    itemPanel:setVisible(true)
    itemPanel:setLocalZOrder(index)

    -- true=已领取，false=未领取
    local isAlreadyReward = self._taskProxy:isCanGetEexploitReward(info.ID)
    info.isAlreadyReward = isAlreadyReward

    local numLab = itemPanel:getChildByName("numLab")
    numLab:setString(info.activeneed)
    boxBtn.info = info
    self:addTouchEventListener(boxBtn,self.onBoxBtnTouch)
    local loadingBar = itemPanel:getChildByName("loadingBar")
    local currentValue = self._taskProxy:getExploitValue()

    local data = self._taskProxy:getConfigByPlayerLevel()
    local forwardValue = 0 
    if info.ID > 1 then
        for k,v in pairs(data) do
            if v.ID == info.ID - 1 then
                forwardValue = v.activeneed
                break        
            end
        end
    end

    local numImg = itemPanel:getChildByName("numImg")
    local numImgLab = numImg:getChildByName("numImgLab")
    numImgLab:setString(currentValue)
    numImg:setVisible(false)
    boxBtn:setOpacity(255)
    if itemPanel.boxEffect then
        itemPanel.boxEffect:pause()
        itemPanel.boxEffect:setVisible(false)
    end
    local url = "images/newGui1/Icon_chest3.png"
    if currentValue < info.activeneed then -- info.activeneed 每一个阶段需要的数值
        if currentValue < forwardValue then
            loadingBar:setPercent(0)
        else
            numImg:setVisible(true)
            local perst = (currentValue - forwardValue)/(info.activeneed - forwardValue)
            numImg:setPositionX(22+86*perst)
            loadingBar:setPercent(100*perst)
            if perst == 0 and index > 1 then
                numImg:setPositionX(0)
            end
        end
        --不可领取
    else
        if not isAlreadyReward then
            --可领取未领取
            url = "images/newGui1/Icon_chest2.png"

            if itemPanel.boxEffect then
                itemPanel.boxEffect:resume()
                itemPanel.boxEffect:setVisible(true)            
            else
                itemPanel.boxEffect = UICCBLayer.new("rgb-zg-xiang",boxBtn)
                itemPanel.boxEffect:setPosition(boxBtn:getContentSize().width/2,boxBtn:getContentSize().height /2)
                itemPanel.boxEffect:setLocalZOrder(100)
            end
            
            boxBtn:setOpacity(0) -- 隐藏
            self.haveRewardIndex = self.haveRewardIndex or index
        else
            --可领取已领取
            url = "images/newGui1/Icon_chest1.png"
        end
        loadingBar:setPercent(100)
    end
    TextureManager:updateButtonNormal(boxBtn,url)

end

function TaskExploitPanel:renderItems(itemPanel, infos, index)
    --for i = 1, 3 do
    --    local node = itemPanel:getChildByName("itemBtn"..i)
    --    if infos[i] then
    --        self:renderItem(node, infos[i]) 
    --    else
    --        node:setVisible(false)
    --    end
    --end
    if infos then
        self:renderItem(itemPanel:getChildByName("itemBtn1"), infos) 
    else
        node:setVisible(false)
    end
end

function TaskExploitPanel:onNodeTouch(sender)
    self:showTaskInfo(sender.info,sender.finishTimes,sender.iconInfo)
end

function TaskExploitPanel:renderItem(node,info)

    local iconInfo = {}
    iconInfo.power = GamePowerConfig.Other
    iconInfo.typeid = info.icon
    iconInfo.num = 0
    local icon = node.icon
    local bgIconImg = node:getChildByName("bgIconImg")
    bgIconImg:setColor(cc.c3b(255,255,255))
    if not icon then
        icon = UIIcon.new(bgIconImg,iconInfo,false)
        icon:setPosition(47,47)
        node.icon = icon 
    else
        icon:updateData(iconInfo)
    end
    icon:setTouchEnabled(false)

    local taskNameLab = node:getChildByName("taskNameLab")
    taskNameLab:setString(info.name)

    --最大进度
    self.proBar = node:getChildByName("proBar")
    local maxNumLab = self.proBar:getChildByName("maxNumLab")
    self.maxNumLab = maxNumLab
    --单位换算
    local maxNumPro = self:formatNumberByK3(info.finishcond2)

    if info.finishNum == 0 then
        maxNumLab:setString("/无限")
    else
        maxNumLab:setString("/"..maxNumPro)
    end
    local url = "images/newGui1/SpMovBg.png"
    TextureManager:updateButtonNormal(node,url)
    local taskList = self._taskProxy:getExploitTaskList()
    local finishTimes = 0
    local num = 0
    if taskList[info.ID] ~= nil then
       finishTimes =  taskList[info.ID].finishTimes
       num =  taskList[info.ID].num
    end

    node.finishTimes = num
    local roleProxy = self:getProxy(GameProxys.Role)
    local playerLevel = roleProxy:getRoleAttrValue(PlayerPowerDefine.POWER_level)
    local openConditionLab = node:getChildByName("openConditionLab")
    openConditionLab:setString("+"..info.reward.."积分")

    openConditionLab:setColor(ColorUtils:color16ToC3b(ColorUtils.wordColorDark1602))
    --未开启

    if playerLevel < info.opencond then
       self:renderLocakTaskItem(node,info,info.opencond)
    else
        info.finishcond2 = tonumber(info.finishcond2)
        if num < info.finishcond2 then 
            --已开启未完成
            self:renderUnlocakTaskItem(node,info,num)

        else
            --已开启已完成
            self:renderUnlocakCompleteTaskItem(node,info,num)
        end
    end

    node.info = info
    node.iconInfo = iconInfo
    self:addTouchEventListener(node,self.onNodeTouch)
    
    --跳转按钮
    self._btnGo = node:getChildByName("BtnGo")
    self._btnGo.info = info
    ComponentUtils:addTouchEventListener(self._btnGo, self.onSureBtnTouch, nil, self)
end

function TaskExploitPanel:formatNumberByK3(num)
    num = tonumber(num)
    if num >=1000000 then
         num = num/1000000
         num =string.format("%dM",num)
    elseif num >=1000 then
         num = num/1000
         num =string.format("%dk",num)
    end
    return num
end


--当前进度
function TaskExploitPanel:renderUnlocakTaskItem(node,info,finishTimes)
    local completeImg = node:getChildByName("completeImg")
    completeImg:setVisible(false)
    local currentNumLab = self.proBar:getChildByName("currentNumLab")
    --单位换算
    currentNum = self:formatNumberByK3(finishTimes)
    currentNumLab:setString(currentNum)
    --self.maxNumLab:setPositionX(currentNumLab:getPositionX()+currentNumLab:getContentSize().width)
    NodeUtils:alignNodeL2R(self.proBar:getChildByName("processL_0"), currentNumLab, self.maxNumLab)
end

function TaskExploitPanel:renderUnlocakCompleteTaskItem(node,info,finishTimes)
    local completeImg = node:getChildByName("completeImg")
    local url = "images/task/complete.png"
    TextureManager:updateImageView(completeImg, url)  
    completeImg:setVisible(true)
    local currentNumLab = self.proBar:getChildByName("currentNumLab")
    --单位换算
    currentNum = self:formatNumberByK3(finishTimes)
    currentNumLab:setString(currentNum)
    --self.maxNumLab:setPositionX(currentNumLab:getPositionX()+currentNumLab:getContentSize().width)
    NodeUtils:alignNodeL2R(self.proBar:getChildByName("processL_0"), currentNumLab, self.maxNumLab)
    local color = ColorUtils.wordColorDark03
    currentNumLab:setColor(color)
end

function TaskExploitPanel:renderLocakTaskItem(node,info,playerLevel)
    local url = "images/newGui1/SpMovBg.png"
    local bgIconImg = node:getChildByName("bgIconImg")
    bgIconImg:setColor(cc.c3b(125,125,125))
    TextureManager:updateButtonNormal(node,url)
    local currentNumLab = self.proBar:getChildByName("currentNumLab")
    currentNumLab:setString("0")
    local completeImg = node:getChildByName("completeImg")
    completeImg:setVisible(true)
    local url = "images/newGui1/IconLock.png"
    TextureManager:updateImageView(completeImg, url)
    local openConditionLab = node:getChildByName("openConditionLab")
    openConditionLab:setColor(ColorUtils:color16ToC3b(ColorUtils.wordColorDark1604))
    openConditionLab:setString("主公"..playerLevel.."级开启")
end

function TaskExploitPanel:onSureBtnTouch(sender)
    local info = sender.info
    local moduleName = info.jumpmodule
    local panelName = info.reaches

    -- if panelName == 'TreasureHeroPanel' then  --判定战将探宝是否已开放
    --     local lotteryProxy = self:getProxy(GameProxys.Lottery)
    --     if lotteryProxy:isUnlockHeroLottery() == true  then
    --         -- local data = {}
    --         -- data.moduleName = moduleName
    --         -- self:dispatchEvent(TaskEvent.SHOW_OTHER_EVENT,data)
    --         -- self:hide()    
    --         -- self:dispatchEvent(TaskEvent.HIDE_SELF_EVENT, {})
    --     else
    --         return
    --     end
    -- end
    
    if moduleName == ModuleName.RegionModule then --跳转到战役，等战役打开了再关闭任务模块
        local data = {}
        data.moduleName = moduleName
        data["extraMsg"] = {}
        data["extraMsg"]["panelName"] = panelName
        self:dispatchEvent(TaskEvent.SHOW_OTHER_EVENT,data)
        self:hide()   
    else
        ModuleJumpManager:jump(moduleName, panelName)
        self:hide()
        self:dispatchEvent(TaskEvent.HIDE_SELF_EVENT, {})
    end

end

function TaskExploitPanel:renderItemBox(itemPanel, info, index)
    if itemPanel == nil or info == nil then
        return
    end

    local boxBtn = itemPanel:getChildByName("boxBtn")
    if info.last then -- 如果true ，itemPanel:(false)
        itemPanel:setVisible(info.last ~= true)
        return 
    end
    
    itemPanel:setVisible(true)
    itemPanel:setLocalZOrder(index)

    -- true=已领取，false=未领取
    local isAlreadyReward = self._taskProxy:isCanGetEexploitReward(info.ID)
    info.isAlreadyReward = isAlreadyReward

    local numLab = itemPanel:getChildByName("numLab")
    numLab:setString(info.activeneed)
    boxBtn.info = info
    self:addTouchEventListener(boxBtn,self.onBoxBtnTouch)
   -- local loadingBar = itemPanel:getChildByName("loadingBar")
    local currentValue = self._taskProxy:getExploitValue()

    local data = self._taskProxy:getConfigByPlayerLevel()
    local forwardValue = 0 
    if info.ID > 1 then
        for k,v in pairs(data) do
            if v.ID == info.ID - 1 then
                forwardValue = v.activeneed
                break        
            end
        end
    end

    --local numImg = itemPanel:getChildByName("numImg")
    --local numImgLab = numImg:getChildByName("numImgLab")
    --numImgLab:setString(currentValue)
    --numImg:setVisible(false)
    boxBtn:setOpacity(255)
    if itemPanel.boxEffect then
        itemPanel.boxEffect:pause()
        itemPanel.boxEffect:setVisible(false)
    end
    local url = "images/newGui1/Icon_chest3.png"
    if currentValue < info.activeneed then -- info.activeneed 每一个阶段需要的数值
        --if currentValue < forwardValue then
        --    --loadingBar:setPercent(0)
        --else
        --    --numImg:setVisible(true)
        --    local perst = (currentValue - forwardValue)/(info.activeneed - forwardValue)
        --    --numImg:setPositionX(22+86*perst)
        --    --loadingBar:setPercent(100*perst)
        --    --if perst == 0 and index > 1 then
        --    --    numImg:setPositionX(0)
        --    --end
        --end
        --不可领取
    else
        if not isAlreadyReward then
            --可领取未领取
            url = "images/newGui1/Icon_chest2.png"

            if itemPanel.boxEffect then
                itemPanel.boxEffect:resume()
                itemPanel.boxEffect:setVisible(true)            
            else
                itemPanel.boxEffect = UICCBLayer.new("rgb-zg-xiang",boxBtn)
                itemPanel.boxEffect:setPosition(boxBtn:getContentSize().width/2,boxBtn:getContentSize().height /2)
                itemPanel.boxEffect:setLocalZOrder(100)
            end
            
            boxBtn:setOpacity(0) -- 隐藏
            self.haveRewardIndex = self.haveRewardIndex or index
        else
            --可领取已领取
            url = "images/newGui1/Icon_chest1.png"
        end
        --loadingBar:setPercent(100)
    end
    TextureManager:updateButtonNormal(boxBtn,url)

end